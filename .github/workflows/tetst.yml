name: Build and Deploy Laravel Application

on:
  push:
    branches:
      - master

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push mysql image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile.mysql
          tags: ${{ secrets.DOCKER_USERNAME }}/mysql:latest

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile.service1
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile.service2
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Build and push nginx image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile.nginx
          tags: ${{ secrets.DOCKER_USERNAME }}/nginx:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: deploy to server via ssh
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.SSHKEY }}
  #         script: |
  #           docker pull ${{ secrets.DOCKER_USERNAME }}/mysql:latest
  #           docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
  #           docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
  #           docker pull ${{ secrets.DOCKER_USERNAME }}/nginx:latest

  #           # Stop and remove existing containers
  #           docker stop frontend || true && docker rm frontend || true
  #           docker stop backend || true && docker rm backend || true
  #           docker stop nginx || true && docker rm nginx || true
  #           docker stop mysql || true && docker rm mysql || true

  #           docker network create laravel || true

  #           docker run -d --name mysql --network laravel -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=laravel ${{ secrets.DOCKER_USERNAME }}/mysql
  #           docker run -d --name backend --network laravel ${{ secrets.DOCKER_USERNAME }}/backend && docker exec backend php artisan key:generate && docker exec backend php artisan migrate --force && docker exec backend php artisan db:seed --force &&  docker exec backend php artisan storage:link && docker exec backend php artisan serve
  #           docker run -d --name frontend --network laravel ${{ secrets.DOCKER_USERNAME }}/frontend
  #           docker run -d --name nginx --network laravel -p 80:80 ${{ secrets.DOCKER_USERNAME }}/nginx

  # docker pull rycs123/mysql:latest && docker pull rycs123/backend:latest && docker pull rycs123/frontend:latest && docker pull rycs123/nginx:latest

  # docker run -d --name mysql --network laravel -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=laravel rycs123/mysql
  # docker run -d --name backend --network laravel rycs123/backend
  # docker run -d --name frontend --network laravel rycs123/frontend
  # docker run -d --name nginx --network laravel -p 80:80 rycs123/nginx
