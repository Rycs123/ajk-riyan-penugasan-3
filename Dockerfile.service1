FROM php:8.2-fpm

WORKDIR /var/www/fullstack

RUN apt-get update && apt-get install -y \
    libpng-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    git \
    curl \
    libzip-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

RUN docker-php-ext-install gd pdo pdo_mysql exif pcntl bcmath mbstring zip opcache

COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

COPY . .

RUN composer install --optimize-autoloader --no-dev

RUN cp .env.example .env

RUN php artisan key:generate

# Debugging steps
RUN php -r "file_exists('.env') ? print('Environment file exists\n') : print('Environment file missing\n');"
RUN php -r "print_r(getenv());"  # Print all environment variables
RUN php -r "print_r(include('.env'));"  # Print .env contents
RUN php artisan config:cache

# Ensure the application can connect to the database
RUN php -r "try { new PDO(getenv('DB_CONNECTION') . ':host=' . getenv('DB_HOST') . ';dbname=' . getenv('DB_DATABASE'), getenv('DB_USERNAME'), getenv('DB_PASSWORD')); print('Database connection successful\n'); } catch (Exception $e) { print('Database connection failed: ' . $e->getMessage() . '\n'); exit(1); }"

RUN php artisan migrate:reset
RUN php artisan migrate
RUN php artisan db:seed

RUN php artisan config:clear
RUN php artisan config:cache
RUN php artisan view:cache
RUN php artisan storage:link

RUN  chmod -R 775 . && chown -R www-data:www-data .
RUN chmod -R 775 /storage/logs

EXPOSE 9000
CMD ["php-fpm"]
